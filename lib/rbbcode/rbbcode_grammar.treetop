<%
  def def_tag(rule_name, tag_name)
    "
      rule #{rule_name}
        ('[#{tag_name.downcase}]'/'[#{tag_name.upcase}]')
        (!'[/#{tag_name.downcase}]' !'[/#{tag_name.upcase}]'
        (tag <RbbCode::TagNode> / .))+
        ('[/#{tag_name.downcase}]' / '[/#{tag_name.upcase}]')
      end
    "
  end
%>

grammar RbbCodeGrammar
  rule document
    # Consume the trailing linebreaks, because the paragraph lookahead
    # doesn't consume them.
    contents:(blockquote <RbbCode::BlockquoteNode> / list <RbbCode::ListNode> / paragraph <RbbCode::ParagraphNode>)* break_ws* <RbbCode::DocumentNode>
  end
  
  rule paragraph
    (break_ws 2..)
    (
      !(break_ws 2..)
      paragraph_contents
    )+
  end
  
  rule paragraph_contents
    (tag <RbbCode::TagNode> / single_break_ws / .)
  end
  
  rule break_ws
    # Allow whitespace around the linebreaks
    [ \t]* [\r\n] [ \t]*
  end
  
  rule whitespace
    # Any whitespace, including linebreaks
    [ \t\r\n]
  end
  
  rule single_break_ws
    # We don't count linebreaks when they're immediately followed by
    # certain keywords. This avoids printing an extra <br/> in some cases.
    break_ws !break_ws !(break_ws* ('[/quote]' / '[*]' / '[/list]')) <RbbCode::SingleBreakNode>
  end
  
  rule blockquote
    break_ws*
    '[quote]'
    contents:(
      # Possible linebreaks after opening quote tag
      break_ws*
      
      # First paragraph (mandatory)
      (blockquote_paragraph <RbbCode::ParagraphNode>)
      
      # Subsequent paragraphs (optional)
      (
        (break_ws 2..)
        (blockquote_paragraph <RbbCode::ParagraphNode>)
      )*
      
      # Possible linebreaks before closing quote tag
      break_ws*
    )
    '[/quote]'
  end
  
  rule blockquote_paragraph
    (!('[/quote]' / (break_ws 2..)) paragraph_contents)+
  end
  
  rule list
    break_ws*
    '[list]'
    contents:(
      # Possible linebreaks after opening list tag
      whitespace*
      
      # At least one list item
      (
        (
          '[*]'
          contents:(!'[/list]' !'[*]' paragraph_contents)*
          <RbbCode::ListItemNode>
        )
      )+
      
      # Possible linebreaks before closing list tag
      whitespace*
    )
    '[/list]'
  end
  
  rule tag
    # Make sure that anytime you call def_tag, you add it to this list:
    bold / italic / underline / simple_url / complex_url / img / color
  end
  
  <%= def_tag 'bold', 'b' %>
  <%= def_tag 'italic', 'i' %>
  <%= def_tag 'underline', 'u' %>
  <%= def_tag 'simple_url', 'url' %>
  <%= def_tag 'img', 'img' %>
  
  rule complex_url
    '[url=' url:[^\]]+ ']'
    text:(!'[/url]' .)+
    '[/url]'
  end
  
  rule color
    '[color=' ident:([^\]]+) ']'
     text:(!'[/color]' paragraph_contents)+ 
    '[/color]'
  end
end